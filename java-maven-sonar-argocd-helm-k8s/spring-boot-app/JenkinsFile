pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Install Java 17') {
      steps {
        sh '''
          # Print current Java version
          echo "Current Java version:"
          java -version
          
          # Install Java 17
          apt-get update
          apt-get install -y wget apt-transport-https gnupg lsb-release
          
          # Add Adoptium repository
          wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | apt-key add -
          echo "deb https://packages.adoptium.net/artifactory/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/adoptium.list
          
          apt-get update
          apt-get install -y temurin-17-jdk
          
          # Temporarily save original JAVA_HOME
          ORIGINAL_JAVA_HOME=$JAVA_HOME
          ORIGINAL_PATH=$PATH
          
          # Print installed Java versions
          echo "Installed Java versions:"
          ls -la /usr/lib/jvm/
          
          echo "Java 17 installed successfully"
        '''
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.239.114.111:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            # Temporarily set JAVA_HOME to Java 17 for SonarQube
            export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64
            export PATH=$JAVA_HOME/bin:$PATH
            
            # Verify Java version for SonarQube
            echo "Java version for SonarQube analysis:"
            java -version
            
            # Run SonarQube with Java 17
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
            
            # Revert to original Java for remaining pipeline if needed
            # export JAVA_HOME=$ORIGINAL_JAVA_HOME
            # export PATH=$ORIGINAL_PATH
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "brandonsohel/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "Sohel-1587"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "sohel.mme@gmail.com "
                    git config user.name "Sohel-1587"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
